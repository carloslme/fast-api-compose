# This is a basic workflow to help you implement flake8, tool that will help you to
# check your code base against coding style (PEP8), programming errors 
# (like “library imported but unused” and “Undefined name”) and to check cyclomatic complexity.
name: flake8 Lint + Pytest

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains two jobs
  flake8-lint:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest 
    name: Lint
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Checking coding styling

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Command 1
          echo Command 2
      
      # Flake8 Lint steps    
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # If an action is defined in a different repository than your workflow file, 
      # you can reference the action with the {owner}/{repo}@{ref} syntax in your workflow file.
      - name: Check out source repository
        uses: actions/checkout@v2

      # 
      - name: Set up Python environment
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: flake8 Lint
        uses: py-actions/flake8@v2

  pytest:
    needs: flake8-lint
    # The type of runner that the job will run on
    runs-on: ubuntu-latest 
    timeout-minutes: 10

    name: Pytest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.8"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest